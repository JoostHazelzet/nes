#!/usr/bin/env bash

# .envrc for nes (Pyntendo) project
# Python/Cython NES emulator with NumPy, Pygame, and Jupyter support

# Load environment variables from .env file (if it exists)
dotenv

# Add local scripts to path
PATH_add_local

# === Python Environment (uv) ===
# Use uv for Python package management
layout_uv

# === Project Structure ===
export PROJECT_NAME="pyntendo"
export NES_ROOT="$PWD"
export NES_CORE_DIR="$PWD/nes"
export CYCORE_DIR="$PWD/nes/cycore"
export PYCORE_DIR="$PWD/nes/pycore"
export TESTS_DIR="$PWD/tests"
export IMG_DIR="$PWD/img"
export PALETTES_DIR="$PWD/palettes"
export SHADER_DIR="$PWD/shader"

# === Development Configuration ===
export PYTHONPATH="$NES_ROOT:$PYTHONPATH"
export PYTHONDONTWRITEBYTECODE=1

# Cython compilation settings
export CYTHON_ANNOTATE=1
export CYTHON_PROFILE=0
export CYTHON_BOUNDSCHECK=0
export CYTHON_NONECHECK=0
export CYTHON_CDIVISION=1

# NES emulator settings
export NES_SYNC_MODE=1  # SYNC_AUDIO
export NES_SCREEN_SCALE=3
export NES_VERBOSE=1

# Jupyter settings
export JUPYTER_CONFIG_DIR="$NES_ROOT/.jupyter"
export JUPYTER_DATA_DIR="$NES_ROOT/.jupyter/data"

# === Development Shortcuts ===
# Navigation shortcuts
alias root="cd $NES_ROOT"
alias core="cd $NES_CORE_DIR"
alias cycore="cd $CYCORE_DIR"
alias pycore="cd $PYCORE_DIR"
alias tests="cd $TESTS_DIR"
alias img="cd $IMG_DIR"
alias palettes="cd $PALETTES_DIR"
alias shader="cd $SHADER_DIR"

# Python/uv shortcuts
alias install="uv sync"
alias install-dev="uv sync --dev"
alias install-editable="uv pip install -e ."
alias python="uv run python"
alias pip="uv pip"

# Cython compilation shortcuts
alias build="uv run python setup.py build_ext --inplace"
alias build-dev="uv run python setup.py build_ext --inplace --debug"
alias clean-build="rm -rf build/ nes/cycore/*.c nes/cycore/*.html nes/cycore/*.so pyntendo.egg-info/"
alias rebuild="clean-build && build"

# NES emulator shortcuts
alias nes="uv run python main.py"
alias nes-headless="uv run python -c 'from nes import NES; nes = NES(\"rom.nes\", headless=True)'"
alias test-nes="uv run python -m pytest tests/"

# Jupyter shortcuts
alias jupyter="uv run jupyter"
alias jupyter-lab="uv run jupyter lab"
alias jupyter-notebook="uv run jupyter notebook"
alias demo="uv run jupyter notebook 'Headless Demo.ipynb'"

# Development workflows
alias dev="jupyter-lab"
alias test="uv run python -m pytest"
alias test-watch="uv run python -m pytest --watch"
alias lint="uv run python -m flake8 nes/"
alias format="uv run python -m black nes/"

# Build and package shortcuts
alias build-wheel="uv run python setup.py bdist_wheel"
alias build-sdist="uv run python setup.py sdist"
alias build-all="build-wheel && build-sdist"

# === Status Message ===
echo "üéÆ Pyntendo (NES Emulator) development environment loaded"
echo "üêç Technology: Python + Cython + NumPy + Pygame"
echo "‚ö° Features: 60fps emulation, headless operation, RL support"
echo "üìì Jupyter: Interactive development and demos"
echo ""
echo "üõ†Ô∏è  Available shortcuts:"
echo "   NAVIGATION: root, core, cycore, pycore, tests, img, palettes, shader"
echo "   PYTHON: install, install-dev, install-editable, python, pip"
echo "   CYTHON: build, build-dev, clean-build, rebuild"
echo "   NES: nes, nes-headless, test-nes"
echo "   JUPYTER: jupyter, jupyter-lab, jupyter-notebook, demo"
echo "   DEVELOPMENT: dev, test, test-watch, lint, format"
echo "   BUILD: build-wheel, build-sdist, build-all"
